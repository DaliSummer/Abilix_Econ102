#include "ASEIO.h"

const int buttons_ports[] = {1/* mode switcher */, 8/* left */, 9/* right */, 10/* emergency */};
const int magnet_port = 0;
const int touch_ports[] = {4/* 0 left */, 5/* 1 left */, 11/* 2 up */, 7 /* 0 right */, 6/* 1 right */, -1/* 2  down */};

float area[] = {0.0, 0.0, 7.1};
float cur_pos[] = {0.0, 0.0, 0.0};
int beep = 0;

int work = 1;
int let[] = {0, 0, 0};
int touch[] = {0, 0, 0};
float timer[] = {/* moving timer task for 0-2 */0.0, 0.0, 0.0, /* start moving time for 0-2*/0.0, 0.0, 0.0};
int speed[] = {-50, 50, -80};

void check_touch(int i)
{
    if (touch_ports[i]>=0 && DI(touch_ports[i]))
    {
        touch[i]=-1;
    }
    else if (touch_ports[i+3]>=0 && DI(touch_ports[i+3]))
    {
        touch[i]=1;
    }
    else
    {
        touch[i]=0;
    }
}

void start(int i, int l, float t)
{
    timer[i] = 0.0;
    if (t != 0.0)
    {
         if (t*l + cur_pos[i] > area[i])
        {
            t = area[i] - cur_pos[i];
            beep = 1;
        } 
        else if (t*l + cur_pos[i] < 0)
        {
           t = cur_pos[i];
           beep = 1;
        }
        timer[i] = seconds() + t;
    } 
    let[i] = l;
    timer[i+3] = seconds();
}

void stop(int i)
{
    cur_pos[i] += (seconds()-timer[i+3])*let[i];
    let[i] = 0;
    timer[i] = 0.0;
    beep = 1;
}

void check_time(int i)
{
    if (timer[i] == 0.0)
    {
        return;
    }
    if (seconds() > timer[i])
    {
        stop(i);
    }
}

void go(int i)
{     
    check_touch(i);
    check_time(i);
            
    if (!work || let[i] == touch[i])
    {
        SetMotoCL(i, 0);
        if (let[i])
        {
            stop(i);
        }
        return;
    }
    
    SetMotoCL(i, let[i] * speed[i]);
}

void calibrate_actuator()
{
    int i = 2;

    start(i, -1, 0);
    while(let[i])
    {
    }
    cur_pos[i] = 0.0;
    start(i, 1, area[i]/2);
    while(let[i])
    {
    }
}

void calibrate_arm(int i)
{
    start(i, -1, 0);
    while(let[i])
    {
    }
    start(i, 1, 0);
    float l_timer = seconds();
    while(let[i])
    {
    }
    area[i] = seconds() - l_timer;
    cur_pos[i] = area[i];
    start(i, -1, area[i]/2);
    while(let[i])
    {
    }
}

void main()
{
    calibrate_actuator();
    calibrate_arm(1);
    calibrate_arm(0);
}

void task_1()
{
    while(work)
    {
        go(0);
        go(1);
        go(2);
    }
}

void task_2()
{
    while(work)
    {
        if ( DI(10) )
        {
            work = 0;
            go(0);
            go(1);
            go(2);
            
            BEEP(723.200012,0.500000);
            BEEP(423.200012,0.500000);
            BEEP(123.200012,0.500000);
        }
    }
}

void task_3()
{
    int i = 0;
    float l_timer = seconds();
    while (1)
    {
        if (beep)
        {
            BEEP(923.200012,0.300000);
            beep = 0;
        }
        
        if (seconds() - l_timer  > 1.5)
        {
            ++i;
            if (3 == i)
            {
                i = 0;
            }
            printf( "\ni = %d\nlet = %d\ntouch = %d\narea = %f\npos = %f\n\n", i, let[i], touch[i], area[i], cur_pos[i]);
            l_timer = seconds();
        }
    }
}





//2013DUODUOScaraA0905